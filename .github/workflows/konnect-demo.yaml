on:
  push:
    branches:
      - 'master'
    paths:
      - 'deck/**'
      - 'blog_insomnia.yaml'
jobs:
  deploy_to_clouds:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'initial commit') }}
    name: Deploying Kong Configuration
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup node
      uses: actions/setup-node@v2.2.0
      with:
        node-version: "18"
    - name: Install DecK
      run: |
        curl -sL https://github.com/kong/deck/releases/download/v1.47.0/deck_1.47.0_linux_amd64.tar.gz -o deck.tar.gz
        tar -xf deck.tar.gz -C /tmp
        cp /tmp/deck /usr/local/bin/
    - name: Install Insomnia
      run: |
        curl -sL https://github.com/Kong/insomnia/releases/download/core%4011.1.0-beta.3/inso-linux-x64-11.1.0-beta.3.tar.xz -o inso.tar.xz
        sudo tar -xf inso.tar.xz -C /tmp/
        cp /tmp/inso /usr/local/bin/
    - name: Lint blog spec
      run: inso lint spec --ci -w blog_insomnia.yaml Blog
    - name: Export blog spec
      run: inso --ci -w blog_insomnia.yaml export spec Blog > blog.yaml
    - name: Generate new gateway configuration
      run: deck file openapi2kong --spec blog.yaml --output-file kong.yaml
    - name: Patch Service Host
      run: deck file patch -s kong.yaml -o kong.yaml --selector "$..services[*]" --value 'host:"blog-service.'$DEMO_NAMESPACE'.svc"'
      env:
        DEMO_NAMESPACE: ${{ secrets.DEMO_NAMESPACE }}
    - name: Add Kong plugins
      run: |
        # Add plugins based on literal config
        deck file add-plugins -s kong.yaml -o kong.yaml --config "$KONG_OIDC_CONF" --selector "$.services[*]"
        # Add plugins based on files in folder
        deck file add-plugins -s kong.yaml -o kong.yaml ./deck/plugins/*
      env:
        KONG_OIDC_CONF: ${{ secrets.KONG_OIDC_PLUGIN }}
    - name: Backup existing configuration
      run: deck gateway dump --konnect-token $KONNECT_TOKEN --konnect-control-plane-name $CP_NAME --select-tag gitops --tls-skip-verify > kong-backup.yaml
      env:
       KONNECT_TOKEN: ${{ secrets.KONNECT_TOKEN }}
       CP_NAME: ${{ secrets.CP_NAME }}
    - name: Apply new configuration
      run: |
        deck gateway sync --konnect-token $KONNECT_TOKEN --konnect-control-plane-name $CP_NAME --select-tag gitops --parallelism 1 --tls-skip-verify kong.yaml
        sleep 10
      env:
        KONNECT_TOKEN: ${{ secrets.KONNECT_TOKEN }}
        CP_NAME: ${{ secrets.CP_NAME }}
    - name: Run API Tests
      id: apiTests
      run: |
        inso -w blog_insomnia.yaml run test -e Development "Authentication" --ci --disableCertValidation
    - name: Back out changes on failure
      if: always() && steps.apiTests.outcome == 'failure'
      run: deck gateway sync --konnect-token $KONNECT_TOKEN --konnect-control-plane-name $CP_NAME --select-tag gitops --parallelism 1 --tls-skip-verify kong-backup.yaml
      env:
        KONNECT_TOKEN: ${{ secrets.KONNECT_TOKEN }}
        CP_NAME: ${{ secrets.CP_NAME }}
